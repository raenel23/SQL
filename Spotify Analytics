-- For this project, I downloaded Spotify data from Kaggle.
-- Then I created a table to insert Spotify data into.


#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

-- Then I inserted the Spotify Data .csv into the table.
-- Next, I explored the data using the following SQL. 

#1. I determined the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

#2. I determined who the Top 10 artists are by popularity
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10

#3. I determined who the Top 5 artists are by energy and danceability.
SELECT track_name, artist_name, energy, danceability
FROM BIT_DB.spotifydata
ORDER BY energy desc
LIMIT 5

#4. I determined what artists have the top 3 tracks determined by liveness and popularity
SELECT track_name, artist_name, liveness, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 3

#5. I determined the Top 10 artists with the loudest and liveness music by track
SELECT track_name, artist_name, loudness, liveness
FROM BIT_DB.spotifydata
ORDER BY loudness desc
LIMIT 10

#6. I calculated the average popularity for the artists. Then, for every artist with an average popularity of 90 or above, I labeled them as "Top Stars".
WITH popularity_average_CTE AS  
(SELECT s.artist_name, 
AVG(s.popularity) AS average_popularity 
FROM SpotifyData s  
GROUP BY s.artist_name) 

 SELECT  artist_name, 
 average_popularity, 
 'Top Star' AS tag 
FROM popularity_average_CTE 
WHERE average_popularity>=90; 
